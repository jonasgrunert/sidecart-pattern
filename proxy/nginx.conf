worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;
# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;
error_log /dev/stdout;
events {
    worker_connections 1024;
}
http {
    lua_package_path '/usr/local/openresty/lualib/?.lua;;';
    resolver 127.0.0.11;
    include /etc/nginx/conf.d/*.conf;
    # cache for discovery metadata documents
    lua_shared_dict discovery 1m;
    # cache for JWKs
    lua_shared_dict jwks 1m;
    index   index.html index.htm;
    sendfile off;
    server {
        listen       80 default_server;
        server_name  localhost;
        return 301 https://$server_name;
    }
    server{
        listen 443 ssl;
        ssl_certificate cert.crt;
        ssl_certificate_key privkey.pem;
        root /var/www/html;
        location /api {
            proxy_pass http://api:3000; 
            access_by_lua '
            local opts = {
                discovery = "http://keycloak:8080/auth/realms/demo/.well-known/openid-configuration"
            }
            -- call introspect for OAuth 2.0 Bearer Access Token validation
            local res, err = require("resty.openidc").bearer_jwt_verify(opts)
            if err then
                ngx.status = 403
                ngx.say(err)
                ngx.exit(ngx.HTTP_FORBIDDEN)
            end
            ngx.req.set_header("X-USER", res.sub)
            ';
        }
        location /auth {
            if ($request_method = 'OPTIONS') {
              add_header 'Access-Control-Allow-Origin' 'localhost';
              add_header 'Access-Control-Allow-Headers' 'Authorization';
              return 204;
            }
            set_by_lua $keycloak 'return ngx.var.host';
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header Host $keycloak;
            proxy_pass http://keycloak:8080;
        }
        location / {
            try_files $uri $uri/index.html;
        }
    }
}
